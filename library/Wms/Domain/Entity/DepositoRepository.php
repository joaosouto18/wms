<?php

namespace Wms\Domain\Entity;

use Doctrine\ORM\EntityRepository,
    Wms\Domain\Entity\Deposito as DepositoEntity;

/**
 * Deposito
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DepositoRepository extends EntityRepository {

    public function save(DepositoEntity $depositoEntity, array $values)
    {
        extract($values['identificacao']);

        $em = $this->getEntityManager();
        $filial = $em->getReference('wms:Filial', $idFilial);

        $depositoEntity->setFilial($filial);
        $depositoEntity->setDescricao($descricao);
        $depositoEntity->setIsAtivo($isAtivo);

        $em->persist($depositoEntity);
    }

    /**
     * Delete an record from database
     * @param int $id 
     */
    public function remove($id)
    {
        $em = $this->getEntityManager();
        $proxy = $em->getReference('wms:Deposito', $id);
        $numErros = 0;

        $dqlArea = $em->createQueryBuilder()
                ->select('count(a) qtty')
                ->from('wms:Deposito\AreaArmazenagem', 'a')
                ->where('a.idDeposito = ?1')
                ->setParameter(1, $id);
        $resultSetArea = $dqlArea->getQuery()->execute();
        $countArea = (integer) $resultSetArea[0]['qtty'];
        if ($countArea != 0) {
            $msg = "{$countArea} área(s) de armazenagem ";
            $numErros++;
        }

        $dqlBox = $em->createQueryBuilder()
                ->select('count(b) qtty')
                ->from('wms:Deposito\Box', 'b')
                ->where('b.idDeposito = ?1')
                ->setParameter(1, $id);
        $resultSetBox = $dqlBox->getQuery()->execute();
        $countBox = (integer) $resultSetBox[0]['qtty'];
        if ($countBox != 0) {
            $msg .= "{$countBox} box(s) ";
            $numErros++;
        }

        $dqlEndereco = $em->createQueryBuilder()
                ->select('count(e) qtty')
                ->from('wms:Deposito\Endereco', 'e')
                ->where('e.idDeposito = ?1')
                ->setParameter(1, $id);
        $resultSetEndereco = $dqlEndereco->getQuery()->execute();
        $countEndereco = (integer) $resultSetEndereco[0]['qtty'];
        if ($countEndereco != 0) {
            $msg .= "{$countEndereco} endereço(s) ";
            $numErros++;
        }

        $dqlSentidoRua = $em->createQueryBuilder()
                ->select('count(s) qtty')
                ->from('wms:Deposito\Endereco\Rua\Sentido', 's')
                ->where('s.idDeposito = ?1')
                ->setParameter(1, $id);
        $resultSetSentidoRua = $dqlSentidoRua->getQuery()->execute();
        $countSentidoRua = (integer) $resultSetSentidoRua[0]['qtty'];
        if ($countSentidoRua != 0) {
            $msg .= "{$countSentidoRua} sentido de rua(s) ";
            $numErros++;
        }

        $dqlRecebimento = $em->createQueryBuilder()
                ->select('count(r) qtty')
                ->from('wms:Recebimento', 'r')
                ->where('r.idDeposito = ?1')
                ->setParameter(1, $id);
        $resultSetRecebimento = $dqlRecebimento->getQuery()->execute();
        $countRecebimento = (integer) $resultSetRecebimento[0]['qtty'];
        if ($countRecebimento != 0) {
            $msg .= "{$countRecebimento} recebimento(s) ";
            $numErros++;
        }


        if ($numErros != 0) {
            throw new \Exception("Não é possivel remover o Depósito {$proxy->getDescricao()}, 
				   há {$msg} vinculado(s).");
        }

        // remove
        $em->remove($proxy);
    }

    /**
     * Retorna todos os dados como matriz (apenas ID e Nome)
     * @return array
     */
    public function getIdValue()
    {
        $dql = $this->getEntityManager()
                ->createQueryBuilder()
                ->select('d.id, d.descricao')
                ->from('wms:Deposito', 'd')
                ->innerJoin('d.filial', 'f')
                ->where('d.isAtivo = :depAtivo AND f.isAtivo = :filialAtivo')
                ->setParameter('depAtivo', 'S')
                ->setParameter('filialAtivo', 'S');
        
        
        $valores = array();
        foreach ($dql->getQuery()->execute() as $item)
            $valores[$item['id']] = $item['descricao'];
        return $valores;
    }

}