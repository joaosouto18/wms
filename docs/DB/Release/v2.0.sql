
﻿-- RENOMEIA A SEQUENCE
RENAME SQ_PROD_VOL_NORMA_01 TO SQ_NORMA_PALETIZACAO_01;


-- ALTERA A TABELA PRODUTO_VOLUME_NORMA PARA NORMA_PALETIZACAO
ALTER TABLE PRODUTO_VOLUME_NORMA DROP CONSTRAINT FK_PRVON_PROVO;
ALTER TABLE PRODUTO_VOLUME_NORMA DROP CONSTRAINT FK_PRVON_UNITI;
DROP INDEX FK_PRVON_PROVO;
DROP INDEX FK_PRVON_UNITI;
ALTER TABLE PRODUTO_VOLUME_NORMA DROP PRIMARY KEY CASCADE  DROP INDEX;
ALTER TABLE PRODUTO_VOLUME_NORMA ADD (COD_NORMA_PALETIZACAO  NUMBER(8)  NOT NULL);
COMMENT ON COLUMN PRODUTO_VOLUME_NORMA.COD_NORMA_PALETIZACAO IS 'Código da norma de paletização para agrupar os volume do produto)';
CREATE  UNIQUE INDEX PK_NORPA ON PRODUTO_VOLUME_NORMA (COD_NORMA_PALETIZACAO);
ALTER TABLE PRODUTO_VOLUME_NORMA ADD CONSTRAINT  PK_NORPA PRIMARY KEY (COD_NORMA_PALETIZACAO);
CREATE INDEX FK_NORPA_UNITI ON PRODUTO_VOLUME_NORMA (COD_UNITIZADOR);


ALTER TABLE PRODUTO_VOLUME_NORMA ADD CONSTRAINT  FK_NORPA_UNITI FOREIGN KEY (COD_UNITIZADOR) REFERENCES UNITIZADOR (COD_UNITIZADOR) ON DELETE CASCADE;
ALTER TABLE PRODUTO_VOLUME_NORMA RENAME TO NORMA_PALETIZACAO;


-- CRIA A TABELA PRODUTO_VOLUME_NORMA
CREATE TABLE PRODUTO_VOLUME_NORMA
(
	COD_NORMA_PALETIZACAO  NUMBER(8)  NOT NULL ,
	COD_PRODUTO_VOLUME  NUMBER(8)  NOT NULL 
);
COMMENT ON COLUMN PRODUTO_VOLUME_NORMA.COD_NORMA_PALETIZACAO IS 'Código da norma de paletização';
COMMENT ON COLUMN PRODUTO_VOLUME_NORMA.COD_PRODUTO_VOLUME IS 'Código do produto volume';
CREATE  UNIQUE INDEX PK_PROVN ON PRODUTO_VOLUME_NORMA (COD_NORMA_PALETIZACAO, COD_PRODUTO_VOLUME);
CREATE INDEX FK_PROVN_NORPA ON PRODUTO_VOLUME_NORMA (COD_NORMA_PALETIZACAO);
CREATE INDEX FK_PROVN_PROVO ON PRODUTO_VOLUME_NORMA (COD_PRODUTO_VOLUME);
ALTER TABLE PRODUTO_VOLUME_NORMA ADD CONSTRAINT  FK_PROVN_NORPA FOREIGN KEY (COD_NORMA_PALETIZACAO) REFERENCES NORMA_PALETIZACAO (COD_NORMA_PALETIZACAO);
ALTER TABLE PRODUTO_VOLUME_NORMA ADD CONSTRAINT  FK_PROVN_PROVO FOREIGN KEY (COD_PRODUTO_VOLUME)    REFERENCES PRODUTO_VOLUME (COD_PRODUTO_VOLUME);

ALTER TABLE PRODUTO DROP COLUMN COD_MODO_OPERACAO;
ALTER TABLE PRODUTO DROP COLUMN NUM_VOLUMES;

Insert into TIPO_SIGLA (COD_TIPO_SIGLA, DSC_TIPO_SIGLA, IND_SIGLA_SISTEMA) Values (51, 'STATUS DA NOTA FISCAL', 'S');

Insert into SIGLA (COD_SIGLA, COD_TIPO_SIGLA, DSC_SIGLA) Values (15, 51, 'INTEGRADA');
Insert into SIGLA (COD_SIGLA, COD_TIPO_SIGLA, DSC_SIGLA) Values (16, 51, 'EM RECEBIMENTO');
Insert into SIGLA (COD_SIGLA, COD_TIPO_SIGLA, DSC_SIGLA) Values (17, 51, 'RECEBIDA');
Insert into SIGLA (COD_SIGLA, COD_TIPO_SIGLA, DSC_SIGLA) Values (18, 51, 'CANCELADA');

ALTER TABLE PRODUTO ADD COD_BARRAS VARCHAR2(128 BYTE);

ALTER TABLE PRODUTO RENAME COLUMN COD_BARRAS TO COD_BARRAS_BASE;


UPDATE SIGLA SET COD_REFERENCIA_SIGLA = 1 WHERE COD_SIGLA = 15;
UPDATE SIGLA SET COD_REFERENCIA_SIGLA = 2 WHERE COD_SIGLA = 16;
UPDATE SIGLA SET COD_REFERENCIA_SIGLA = 3 WHERE COD_SIGLA = 17;
UPDATE SIGLA SET COD_REFERENCIA_SIGLA = 4 WHERE COD_SIGLA = 18;


UPDATE sigla SET cod_referencia_sigla = 1 where cod_sigla = 455;
UPDATE sigla SET cod_referencia_sigla = 2 where cod_sigla = 454;
UPDATE sigla SET cod_referencia_sigla = 3 where cod_sigla = 456;
UPDATE sigla SET cod_referencia_sigla = 4 where cod_sigla = 457;
UPDATE sigla SET cod_referencia_sigla = 5 where cod_sigla = 458;

ALTER TABLE ORDEM_SERVICO ADD DSC_OBSERVACAO VARCHAR2(128 BYTE) NULL;

ALTER TABLE RECEBIMENTO_CONFERENCIA ADD QTD_DIVERGENCIA NUMBER(8);
ALTER TABLE RECEBIMENTO_CONFERENCIA ADD DSC_OBSERVACAO VARCHAR2(300 BYTE);
COMMENT ON COLUMN RECEBIMENTO_CONFERENCIA.QTD_DIVERGENCIA IS 'Quantidade total - quantidade conferida';
COMMENT ON COLUMN RECEBIMENTO_CONFERENCIA.QTD_DIVERGENCIA IS 'Observações sobre as divergências da conferência';


ALTER TABLE CLIENTE RENAME COLUMN COD_PESSOA TO COD_CLIENTE;

ALTER TABLE ORDEM_SERVICO DROP CONSTRAINT FK_ORDSE_USUAR;
ALTER TABLE ORDEM_SERVICO DROP COLUMN COD_USUARIO CASCADE CONSTRAINTS;
ALTER TABLE ORDEM_SERVICO ADD (COD_PESSOA NUMBER(8));
CREATE INDEX FK_ORDSE_PEFIS ON ORDEM_SERVICO
(
	COD_PESSOA  ASC
);
ALTER TABLE ORDEM_SERVICO ADD CONSTRAINT FK_ORDSE_PEFIS FOREIGN KEY (COD_PESSOA) REFERENCES PESSOA_FISICA(COD_PESSOA) ON DELETE SET NULL;



CREATE TABLE CONFERENTE
(
	COD_CONFERENTE  NUMBER(8)  NOT NULL 
);
COMMENT ON COLUMN CONFERENTE.COD_CONFERENTE IS 'Codigo da Pessoa';

CREATE  UNIQUE INDEX PK_CONFE ON CONFERENTE
(
	COD_CONFERENTE  ASC
);

ALTER TABLE CONFERENTE ADD CONSTRAINT  FK_CONFE_PEFIS FOREIGN KEY (COD_CONFERENTE) REFERENCES PESSOA_FISICA(COD_PESSOA);
ALTER TABLE CONFERENTE ADD CONSTRAINT  PK_CONFE PRIMARY KEY (COD_CONFERENTE);

-- revision 2012-06-26 renato medina
-- gravo acao
INSERT INTO RECURSO (COD_RECURSO, DSC_RECURSO, COD_RECURSO_PAI, NOM_RECURSO) VALUES (SQ_RECURSO_01.NEXTVAL, 'Conferente', 0, 'cadastro_conferente');
-- gravo permissoes
INSERT INTO "WMS_ADM"."RECURSO_ACAO" (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'cadastro_conferente'), '1', 'Adicionar');
INSERT INTO "WMS_ADM"."RECURSO_ACAO" (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'cadastro_conferente'), '2', 'Editar');
INSERT INTO "WMS_ADM"."RECURSO_ACAO" (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'cadastro_conferente'), '4', 'Deletar');
INSERT INTO "WMS_ADM"."RECURSO_ACAO" (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'cadastro_conferente'), '5', 'Listar');
-- gravo menu
INSERT INTO MENU_ITEM (COD_MENU_ITEM, COD_RECURSO_ACAO, COD_PAI, DSC_MENU_ITEM, NUM_PESO, DSC_URL) VALUES (SQ_MENU_ITEM_01.NEXTVAL, (SELECT COD_RECURSO_ACAO FROM RECURSO_ACAO WHERE COD_RECURSO = (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'cadastro_conferente') AND COD_ACAO = '5'), 20, 'Conferente', 10, '#');


INSERT INTO ACAO (COD_ACAO, DSC_ACAO, NOM_ACAO) VALUES (29, 'Divergencia', 'divergencia');
INSERT INTO "WMS_ADM"."RECURSO_ACAO" (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'recebimento'), 29, 'Divergencia');

ALTER TABLE RECEBIMENTO_CONFERENCIA ADD QTD_AVARIA NUMBER(8);
COMMENT ON COLUMN RECEBIMENTO_CONFERENCIA.QTD_AVARIA IS 'Quantidade avaria';

INSERT INTO ATIVIDADE (COD_ATIVIDADE, DSC_ATIVIDADE, COD_SETOR_OPERACIONAL) VALUES (3, 'RECONFERIR PRODUTOS', 1);

INSERT INTO SIGLA (COD_SIGLA, COD_TIPO_SIGLA, DSC_SIGLA, COD_REFERENCIA_SIGLA) VALUES (459, 50, 'CONFERENCIA CEGA', 4);

UPDATE sigla SET cod_referencia_sigla = 5 WHERE cod_sigla = 457;
UPDATE sigla SET cod_referencia_sigla = 6 WHERE cod_sigla = 458;

ALTER TABLE NOTA_FISCAL ADD (DTH_ENTRADA DATE DEFAULT SYSDATE);

INSERT INTO SIGLA (COD_SIGLA, COD_TIPO_SIGLA, DSC_SIGLA, COD_REFERENCIA_SIGLA) VALUES (460, 50, 'DESFEITO', 6);
UPDATE sigla SET cod_referencia_sigla = 7 WHERE cod_sigla = 458;

INSERT INTO PARAMETRO (COD_PARAMETRO, COD_CONTEXTO_PARAMETRO, DSC_PARAMETRO, DSC_TITULO_PARAMETRO, IND_PARAMETRO_SISTEMA, COD_TIPO_ATRIBUTO, DSC_VALOR_PARAMETRO)
VALUES (SQ_PARAMETRO_01.NEXTVAL, 3, 'SENHA_AUTORIZAR_DIVERGENCIA', 'Senha para autorizar divergencias', 'N', 'A', '123456');

UPDATE CONTEXTO_PARAMETRO SET DSC_CONTEXTO_PARAMETRO = 'RECEBIMENTO' WHERE COD_CONTEXTO_PARAMETRO = 3;

INSERT INTO acao (COD_ACAO, DSC_ACAO, NOM_ACAO) VALUES (30, 'Desfazer', 'desfazer');
INSERT INTO "WMS_ADM"."RECURSO_ACAO" (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'recebimento'), 30, 'Desfazer');

﻿ALTER TABLE NOTA_FISCAL ADD COD_FILIAL NUMBER(8);
COMMENT ON COLUMN NOTA_FISCAL.COD_FILIAL IS 'Filial que a NF pertence';

ALTER TABLE NOTA_FISCAL ADD IND_BONIFICACAO CHAR(1) DEFAULT 'N' NOT NULL;
COMMENT ON COLUMN NOTA_FISCAL.IND_BONIFICACAO IS 'Indicação se a nota é ou não bonificação';

ALTER TABLE PRODUTO ADD NUM_VOLUMES NUMBER(8) DEFAULT 1 NOT NULL;
COMMENT ON COLUMN PRODUTO.NUM_VOLUMES IS 'Numero de volumes que o Produto Possui';

ALTER TABLE RECEBIMENTO_CONFERENCIA ADD COD_MOTIVO_DIVER_RECEB NUMBER(8);
ALTER TABLE RECEBIMENTO_CONFERENCIA ADD CONSTRAINT  FK_CONRE_MODIR FOREIGN KEY (COD_MOTIVO_DIVER_RECEB) REFERENCES MOTIVO_DIVER_RECEB (COD_MOTIVO_DIVER_RECEB);

DROP INDEX IK_NOFIS_01;

ALTER TABLE PRODUTO_VOLUME ADD DSC_VOLUME VARCHAR(128);
COMMENT ON COLUMN PRODUTO_VOLUME.DSC_VOLUME IS 'Descricao do volume.';


-- revision 2012-07-24 - parte 1 - fabio caram
CREATE SEQUENCE SQ_GRUPO_VOLUME_NORMA_01;

ALTER TABLE PRODUTO_VOLUME_NORMA DROP CONSTRAINT FK_PROVN_NORPA;
ALTER TABLE PRODUTO_VOLUME_NORMA DROP CONSTRAINT FK_PROVN_PROVO;
DROP TABLE PRODUTO_VOLUME_NORMA;

ALTER TABLE NORMA_PALETIZACAO DROP COLUMN COD_PRODUTO_VOLUME CASCADE CONSTRAINTS;


CREATE TABLE GRUPO_VOLUME_NORMA
(
	COD_GRUPO_VOLUME  CHAR(18)  NOT NULL ,
	COD_NORMA_PALETIZACAO  NUMBER(8) NOT NULL 
);

CREATE  UNIQUE INDEX PK_GRPVN ON GRUPO_VOLUME_NORMA
(
	COD_GRUPO_VOLUME  ASC
);

CREATE INDEX FK_GRPVN_NORPA ON GRUPO_VOLUME_NORMA
(
	COD_NORMA_PALETIZACAO  ASC
);


CREATE TABLE GRUPO_PRODUTO_VOLUME
(
	COD_GRUPO_VOLUME  CHAR(18)  NOT NULL ,
	COD_PRODUTO_VOLUME  NUMBER(8)  NOT NULL 
);
COMMENT ON COLUMN GRUPO_PRODUTO_VOLUME.COD_PRODUTO_VOLUME IS 'Código produto volume (código sequêncial para o produto volume)';


CREATE  UNIQUE INDEX PK_GRUPV ON GRUPO_PRODUTO_VOLUME
(
	COD_GRUPO_VOLUME  ASC,
	COD_PRODUTO_VOLUME  ASC
);


CREATE INDEX FK_GRUPV_GRPVN ON GRUPO_PRODUTO_VOLUME
(
	COD_GRUPO_VOLUME  ASC
);


CREATE INDEX FK_GRUPV_PROVO ON GRUPO_PRODUTO_VOLUME
(
	COD_PRODUTO_VOLUME  ASC
);


ALTER TABLE GRUPO_VOLUME_NORMA ADD CONSTRAINT  PK_GRPVN PRIMARY KEY (COD_GRUPO_VOLUME);
ALTER TABLE GRUPO_VOLUME_NORMA ADD CONSTRAINT  FK_GRPVN_NORPA FOREIGN KEY (COD_NORMA_PALETIZACAO) REFERENCES NORMA_PALETIZACAO(COD_NORMA_PALETIZACAO) ON DELETE SET NULL;

ALTER TABLE GRUPO_PRODUTO_VOLUME ADD CONSTRAINT  PK_GRUPV PRIMARY KEY (COD_GRUPO_VOLUME,COD_PRODUTO_VOLUME);
ALTER TABLE GRUPO_PRODUTO_VOLUME ADD CONSTRAINT  FK_GRUPV_GRPVN FOREIGN KEY (COD_GRUPO_VOLUME) REFERENCES GRUPO_VOLUME_NORMA(COD_GRUPO_VOLUME);
ALTER TABLE GRUPO_PRODUTO_VOLUME ADD CONSTRAINT  FK_GRUPV_PROVO FOREIGN KEY (COD_PRODUTO_VOLUME) REFERENCES PRODUTO_VOLUME(COD_PRODUTO_VOLUME);

-- revision 2012-07-25 - parte 2 - fabio caram
DROP TABLE GRUPO_PRODUTO_VOLUME CASCADE CONSTRAINTS PURGE;
DROP TABLE GRUPO_VOLUME_NORMA CASCADE CONSTRAINTS PURGE;

TRUNCATE TABLE PRODUTO_VOLUME;
COMMIT;


CREATE TABLE GRUPO_VOLUME_NORMA
(
  COD_GRUPO_VOLUME  NUMBER(8) NOT NULL ,
  COD_NORMA_PALETIZACAO  NUMBER(8) NOT NULL 
);

CREATE  UNIQUE INDEX PK_GRPVN ON GRUPO_VOLUME_NORMA
(
  COD_GRUPO_VOLUME  ASC
);

CREATE INDEX FK_GRPVN_NORPA ON GRUPO_VOLUME_NORMA
(
  COD_NORMA_PALETIZACAO  ASC
);
ALTER TABLE GRUPO_VOLUME_NORMA ADD CONSTRAINT  PK_GRPVN PRIMARY KEY (COD_GRUPO_VOLUME);
ALTER TABLE GRUPO_VOLUME_NORMA ADD CONSTRAINT  FK_GRPVN_NORPA FOREIGN KEY (COD_NORMA_PALETIZACAO) REFERENCES NORMA_PALETIZACAO(COD_NORMA_PALETIZACAO) ON DELETE SET NULL;


ALTER TABLE PRODUTO_VOLUME ADD COD_GRUPO_VOLUME  NUMBER(8)  NOT NULL;

CREATE INDEX FK_PROVO_GRPVN ON PRODUTO_VOLUME
(
    COD_GRUPO_VOLUME ASC
);

ALTER TABLE PRODUTO_VOLUME ADD CONSTRAINT  FK_PROVO_GRPVN FOREIGN KEY (COD_GRUPO_VOLUME) REFERENCES GRUPO_VOLUME_NORMA (COD_GRUPO_VOLUME);


-- revision 2012-07-25 - parte 3 - fabio caram
ALTER TABLE PRODUTO_VOLUME DROP COLUMN COD_GRUPO_VOLUME CASCADE CONSTRAINTS;

DROP TABLE GRUPO_VOLUME_NORMA CASCADE CONSTRAINTS PURGE;


ALTER TABLE PRODUTO_VOLUME ADD COD_NORMA_PALETIZACAO NUMBER(8) NOT NULL;


CREATE INDEX FK_PROVO_NORPA ON PRODUTO_VOLUME 
(
	COD_NORMA_PALETIZACAO ASC
);
ALTER TABLE PRODUTO_VOLUME ADD CONSTRAINT  FK_PROVO_NORPA FOREIGN KEY (COD_NORMA_PALETIZACAO) REFERENCES NORMA_PALETIZACAO(COD_NORMA_PALETIZACAO) ON DELETE SET NULL;

DROP SEQUENCE SQ_GRUPO_VOLUME_NORMA_01;

ALTER TABLE RECEBIMENTO_CONFERENCIA ADD COD_NOTA_FISCAL NUMBER(8);
COMMENT ON COLUMN RECEBIMENTO_CONFERENCIA.COD_NOTA_FISCAL IS 'Código da Nota Fiscal que ocorreu a divergência da conferência';
ALTER TABLE RECEBIMENTO_CONFERENCIA ADD CONSTRAINT  FK_CONRE_NOFIS FOREIGN KEY (COD_NOTA_FISCAL) REFERENCES NOTA_FISCAL (COD_NOTA_FISCAL);


-- revision 2012-08-09 - adriano uliana - Relatorios > Recebimento > Produtos Conferidos
-- gravo menu
INSERT INTO MENU_ITEM (COD_MENU_ITEM, COD_RECURSO_ACAO, COD_PAI, DSC_MENU_ITEM, NUM_PESO, DSC_URL) VALUES (SQ_MENU_ITEM_01.NEXTVAL, 0, 54, 'Recebimento', 1, '#');
-- gravo acao
INSERT INTO RECURSO (COD_RECURSO, DSC_RECURSO, COD_RECURSO_PAI, NOM_RECURSO) VALUES (SQ_RECURSO_01.NEXTVAL, 'Relatório de Produtos Conferidos', 0, 'relatorio_produtos-conferidos');
-- gravo permissoes
INSERT INTO RECURSO_ACAO (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'relatorio_produtos-conferidos'), 5, 'Início');
-- gravo menu
INSERT INTO MENU_ITEM (COD_MENU_ITEM, COD_RECURSO_ACAO, COD_PAI, DSC_MENU_ITEM, NUM_PESO, DSC_URL) VALUES (SQ_MENU_ITEM_01.NEXTVAL, 
    (SELECT COD_RECURSO_ACAO FROM RECURSO_ACAO WHERE COD_RECURSO = (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'relatorio_produtos-conferidos') AND COD_ACAO = 5), 
    (SELECT COD_MENU_ITEM FROM MENU_ITEM WHERE DSC_MENU_ITEM = 'Recebimento' AND COD_PAI = 54), 'Produtos Conferidos', 10, '#');


-- revision 2012-08-13 - adriano uliana - Cadastros > Produto > Classes de Produto
-- gravo acao
INSERT INTO RECURSO (COD_RECURSO, DSC_RECURSO, COD_RECURSO_PAI, NOM_RECURSO) VALUES (SQ_RECURSO_01.NEXTVAL, 'Classes de Produto', 0, 'produto-classe');
-- gravo permissoes
INSERT INTO RECURSO_ACAO (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'produto-classe'), 5, 'Início');
-- gravo menu
INSERT INTO MENU_ITEM (COD_MENU_ITEM, COD_RECURSO_ACAO, COD_PAI, DSC_MENU_ITEM, NUM_PESO, DSC_URL) VALUES (SQ_MENU_ITEM_01.NEXTVAL, (SELECT COD_RECURSO_ACAO FROM RECURSO_ACAO WHERE COD_RECURSO = (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'produto-classe') AND COD_ACAO = '5'), 37, 'Classes de Produto', 10, '#');


-- revision 2012-08-28 - Fabio Caram - Cadastros de Dados logisticos
ALTER TABLE PRODUTO_VOLUME    ADD (IND_CB_INTERNO  CHAR(1)  DEFAULT 'N' NOT NULL);
ALTER TABLE PRODUTO_VOLUME    ADD (IND_IMPRIMIR_CB CHAR(1)  DEFAULT 'N' NOT NULL);
ALTER TABLE PRODUTO_EMBALAGEM ADD (IND_CB_INTERNO  CHAR(1)  DEFAULT 'N' NOT NULL);
ALTER TABLE PRODUTO_EMBALAGEM ADD (IND_IMPRIMIR_CB CHAR(1)  DEFAULT 'N' NOT NULL);

CREATE SEQUENCE SQ_PRODUTO_DADO_LOGISTICO_01
    INCREMENT BY 1
    START WITH 1
    MAXVALUE 999999999999999999999999999
    MINVALUE 0
    NOCYCLE
    NOCACHE
    NOORDER;

CREATE TABLE PRODUTO_DADO_LOGISTICO
(
	COD_PRODUTO_DADO_LOGISTICO  CHAR(18)      NOT NULL ,
	NUM_ALTURA                  NUMBER(15,2)  NOT NULL ,
	NUM_LARGURA                 NUMBER(15,2)  NOT NULL ,
	NUM_PROFUNDIDADE            NUMBER(15,2)  NOT NULL ,
	NUM_CUBAGEM                 NUMBER(15,2)  NOT NULL ,
	NUM_PESO                    NUMBER(15,3)  NOT NULL ,
	COD_PRODUTO_EMBALAGEM       NUMBER(8)     NULL ,
	COD_NORMA_PALETIZACAO       NUMBER(8)     NULL 
);
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_ALTURA IS 'Altura do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_LARGURA IS 'Largura do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_PROFUNDIDADE IS 'Profundidade do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_CUBAGEM IS 'Cubagem do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_PESO IS 'Peso do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.COD_PRODUTO_EMBALAGEM IS 'Código Produto Embalagem (código sequencial)';

CREATE  UNIQUE INDEX PK_DALOG ON PRODUTO_DADO_LOGISTICO (COD_PRODUTO_DADO_LOGISTICO  ASC);
CREATE INDEX FK_DALOG_PROEM ON PRODUTO_DADO_LOGISTICO (COD_PRODUTO_EMBALAGEM  ASC);
CREATE INDEX FK_DALOG_NORPA ON PRODUTO_DADO_LOGISTICO (COD_NORMA_PALETIZACAO  ASC);

ALTER TABLE PRODUTO_DADO_LOGISTICO ADD CONSTRAINT  PK_DALOG PRIMARY KEY (COD_PRODUTO_DADO_LOGISTICO);
ALTER TABLE PRODUTO_DADO_LOGISTICO ADD CONSTRAINT  FK_DALOG_PROEM FOREIGN KEY (COD_PRODUTO_EMBALAGEM) REFERENCES PRODUTO_EMBALAGEM(COD_PRODUTO_EMBALAGEM) ON DELETE SET NULL;
ALTER TABLE PRODUTO_DADO_LOGISTICO ADD CONSTRAINT  FK_DALOG_NORPA FOREIGN KEY (COD_NORMA_PALETIZACAO) REFERENCES NORMA_PALETIZACAO(COD_NORMA_PALETIZACAO) ON DELETE SET NULL;

DROP TABLE PRODUTO_DADO_LOGISTICO;

CREATE TABLE PRODUTO_DADO_LOGISTICO
(
	COD_PRODUTO_DADO_LOGISTICO  NUMBER(8)     NOT NULL ,
	NUM_ALTURA                  NUMBER(15,2)  NOT NULL ,
	NUM_LARGURA                 NUMBER(15,2)  NOT NULL ,
	NUM_PROFUNDIDADE            NUMBER(15,2)  NOT NULL ,
	NUM_CUBAGEM                 NUMBER(15,2)  NOT NULL ,
	NUM_PESO                    NUMBER(15,3)  NOT NULL ,
	COD_PRODUTO_EMBALAGEM       NUMBER(8)     NULL ,
	COD_NORMA_PALETIZACAO       NUMBER(8)     NULL 
);
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_ALTURA IS 'Altura do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_LARGURA IS 'Largura do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_PROFUNDIDADE IS 'Profundidade do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_CUBAGEM IS 'Cubagem do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_PESO IS 'Peso do volume';
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.COD_PRODUTO_EMBALAGEM IS 'Código Produto Embalagem (código sequencial)';

CREATE  UNIQUE INDEX PK_DALOG ON PRODUTO_DADO_LOGISTICO (COD_PRODUTO_DADO_LOGISTICO  ASC);
CREATE INDEX FK_DALOG_PROEM ON PRODUTO_DADO_LOGISTICO (COD_PRODUTO_EMBALAGEM  ASC);
CREATE INDEX FK_DALOG_NORPA ON PRODUTO_DADO_LOGISTICO (COD_NORMA_PALETIZACAO  ASC);

ALTER TABLE PRODUTO_DADO_LOGISTICO ADD CONSTRAINT  PK_DALOG PRIMARY KEY (COD_PRODUTO_DADO_LOGISTICO);
ALTER TABLE PRODUTO_DADO_LOGISTICO ADD CONSTRAINT  FK_DALOG_PROEM FOREIGN KEY (COD_PRODUTO_EMBALAGEM) REFERENCES PRODUTO_EMBALAGEM(COD_PRODUTO_EMBALAGEM) ON DELETE SET NULL;
ALTER TABLE PRODUTO_DADO_LOGISTICO ADD CONSTRAINT  FK_DALOG_NORPA FOREIGN KEY (COD_NORMA_PALETIZACAO) REFERENCES NORMA_PALETIZACAO(COD_NORMA_PALETIZACAO) ON DELETE SET NULL;

ALTER TABLE PRODUTO_VOLUME    MODIFY COD_BARRAS VARCHAR2(128) NULL;
ALTER TABLE PRODUTO_EMBALAGEM MODIFY COD_BARRAS VARCHAR2(128) NULL;

-- revision 2012-09-04 - Fabio Caram - Cadastros de Dados logisticos
ALTER TABLE NORMA_PALETIZACAO RENAME COLUMN NUM_PESO TO NUM_PESO_OLD;
ALTER TABLE NORMA_PALETIZACAO ADD NUM_PESO NUMBER(15,3) NULL;
UPDATE NORMA_PALETIZACAO SET NUM_PESO = NUM_PESO_OLD;
COMMIT;
ALTER TABLE NORMA_PALETIZACAO DROP COLUMN NUM_PESO_OLD CASCADE CONSTRAINTS;
ALTER TABLE NORMA_PALETIZACAO MODIFY NUM_PESO NUMBER(15,3) NOT NULL;

COMMENT ON COLUMN NORMA_PALETIZACAO.NUM_PESO IS 'Valor de norma x peso total dos volumes';

-- revision 2012-08-09 - renato medina - Relatorios > Recebimento > Produto Recebido
-- gravo acao
INSERT INTO RECURSO (COD_RECURSO, DSC_RECURSO, COD_RECURSO_PAI, NOM_RECURSO) VALUES (SQ_RECURSO_01.NEXTVAL, 'Relatório de Produtos Recebido', 0, 'relatorio_produto-recebido');
-- gravo permissoes
INSERT INTO RECURSO_ACAO (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'relatorio_produto-recebido'), 5, 'Início');
-- gravo menu
INSERT INTO MENU_ITEM (COD_MENU_ITEM, COD_RECURSO_ACAO, COD_PAI, DSC_MENU_ITEM, NUM_PESO, DSC_URL) VALUES (SQ_MENU_ITEM_01.NEXTVAL, 
    (SELECT COD_RECURSO_ACAO FROM RECURSO_ACAO WHERE COD_RECURSO = (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'relatorio_produto-recebido') AND COD_ACAO = 5), 
    (SELECT COD_MENU_ITEM FROM MENU_ITEM WHERE DSC_MENU_ITEM = 'Recebimento' AND COD_PAI = 54), 'Produtos Recebidos', 10, '#');

-- revision 2012-09-05 - Fabio Caram - Cadastros de Dados logisticos
--PRODUTO_VOLUME
ALTER TABLE PRODUTO_VOLUME RENAME COLUMN NUM_ALTURA TO NUM_ALTURA_OLD;
ALTER TABLE PRODUTO_VOLUME ADD NUM_ALTURA NUMBER(15,3) DEFAULT 0 NULL;
UPDATE PRODUTO_VOLUME SET NUM_ALTURA = NUM_ALTURA_OLD;
COMMIT;
ALTER TABLE PRODUTO_VOLUME DROP COLUMN NUM_ALTURA_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_VOLUME MODIFY NUM_ALTURA NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN PRODUTO_VOLUME.NUM_ALTURA IS 'Altura do volume (em metros)';

ALTER TABLE PRODUTO_VOLUME RENAME COLUMN NUM_LARGURA TO NUM_LARGURA_OLD;
ALTER TABLE PRODUTO_VOLUME ADD NUM_LARGURA NUMBER(15,3) DEFAULT 0 NULL;
UPDATE PRODUTO_VOLUME SET NUM_LARGURA = NUM_LARGURA_OLD;
COMMIT;
ALTER TABLE PRODUTO_VOLUME DROP COLUMN NUM_LARGURA_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_VOLUME MODIFY NUM_LARGURA NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN PRODUTO_VOLUME.NUM_LARGURA IS 'Largura do volume (em metros)';

ALTER TABLE PRODUTO_VOLUME RENAME COLUMN NUM_PROFUNDIDADE TO NUM_PROFUNDIDADE_OLD;
ALTER TABLE PRODUTO_VOLUME ADD NUM_PROFUNDIDADE NUMBER(15,3) DEFAULT 0 NULL;
UPDATE PRODUTO_VOLUME SET NUM_PROFUNDIDADE = NUM_PROFUNDIDADE_OLD;
COMMIT;
ALTER TABLE PRODUTO_VOLUME DROP COLUMN NUM_PROFUNDIDADE_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_VOLUME MODIFY NUM_PROFUNDIDADE NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN PRODUTO_VOLUME.NUM_PROFUNDIDADE IS 'Profundidade do volume (em metros)';

ALTER TABLE PRODUTO_VOLUME RENAME COLUMN NUM_CUBAGEM TO NUM_CUBAGEM_OLD;
ALTER TABLE PRODUTO_VOLUME ADD NUM_CUBAGEM NUMBER(15,3) DEFAULT 0 NULL;
UPDATE PRODUTO_VOLUME SET NUM_CUBAGEM = NUM_CUBAGEM_OLD;
COMMIT;
ALTER TABLE PRODUTO_VOLUME DROP COLUMN NUM_CUBAGEM_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_VOLUME MODIFY NUM_CUBAGEM NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN PRODUTO_VOLUME.NUM_CUBAGEM IS 'Cubagem do volume (em metros cúbicos)';

--PRODUTO_DADO_LOGISTICO
ALTER TABLE PRODUTO_DADO_LOGISTICO RENAME COLUMN NUM_ALTURA TO NUM_ALTURA_OLD;
ALTER TABLE PRODUTO_DADO_LOGISTICO ADD NUM_ALTURA NUMBER(15,3) DEFAULT 0 NULL;
UPDATE PRODUTO_DADO_LOGISTICO SET NUM_ALTURA = NUM_ALTURA_OLD;
COMMIT;
ALTER TABLE PRODUTO_DADO_LOGISTICO DROP COLUMN NUM_ALTURA_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_DADO_LOGISTICO MODIFY NUM_ALTURA NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_ALTURA IS 'Altura do produto (em metros)';

ALTER TABLE PRODUTO_DADO_LOGISTICO RENAME COLUMN NUM_LARGURA TO NUM_LARGURA_OLD;
ALTER TABLE PRODUTO_DADO_LOGISTICO ADD NUM_LARGURA NUMBER(15,3) DEFAULT 0 NULL;
UPDATE PRODUTO_DADO_LOGISTICO SET NUM_LARGURA = NUM_LARGURA_OLD;
COMMIT;
ALTER TABLE PRODUTO_DADO_LOGISTICO DROP COLUMN NUM_LARGURA_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_DADO_LOGISTICO MODIFY NUM_LARGURA NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_LARGURA IS 'Largura do produto (em metros)';

ALTER TABLE PRODUTO_DADO_LOGISTICO RENAME COLUMN NUM_PROFUNDIDADE TO NUM_PROFUNDIDADE_OLD;
ALTER TABLE PRODUTO_DADO_LOGISTICO ADD NUM_PROFUNDIDADE NUMBER(15,3) DEFAULT 0 NULL;
UPDATE PRODUTO_DADO_LOGISTICO SET NUM_PROFUNDIDADE = NUM_PROFUNDIDADE_OLD;
COMMIT;
ALTER TABLE PRODUTO_DADO_LOGISTICO DROP COLUMN NUM_PROFUNDIDADE_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_DADO_LOGISTICO MODIFY NUM_PROFUNDIDADE NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_PROFUNDIDADE IS 'Profundidade do produto (em metros)';

ALTER TABLE PRODUTO_DADO_LOGISTICO RENAME COLUMN NUM_CUBAGEM TO NUM_CUBAGEM_OLD;
ALTER TABLE PRODUTO_DADO_LOGISTICO ADD NUM_CUBAGEM NUMBER(15,3) DEFAULT 0 NULL;
UPDATE PRODUTO_DADO_LOGISTICO SET NUM_CUBAGEM = NUM_CUBAGEM_OLD;
COMMIT;
ALTER TABLE PRODUTO_DADO_LOGISTICO DROP COLUMN NUM_CUBAGEM_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_DADO_LOGISTICO MODIFY NUM_CUBAGEM NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_CUBAGEM IS 'Cubagem do produto (em metros cúbicos)';

--UNITIZADOR
ALTER TABLE UNITIZADOR RENAME COLUMN NUM_ALTURA_UNITIZADOR TO NUM_ALTURA_UNITIZADOR_OLD;
ALTER TABLE UNITIZADOR ADD NUM_ALTURA_UNITIZADOR NUMBER(15,3) DEFAULT 0 NULL;
UPDATE UNITIZADOR SET NUM_ALTURA_UNITIZADOR = NUM_ALTURA_UNITIZADOR_OLD;
COMMIT;
ALTER TABLE UNITIZADOR DROP COLUMN NUM_ALTURA_UNITIZADOR_OLD CASCADE CONSTRAINTS;
ALTER TABLE UNITIZADOR MODIFY NUM_ALTURA_UNITIZADOR NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN UNITIZADOR.NUM_ALTURA_UNITIZADOR IS 'Número da dimensão da altura (dimensão da altura é em metros)';

ALTER TABLE UNITIZADOR RENAME COLUMN NUM_LARGURA_UNITIZADOR TO NUM_LARGURA_UNITIZADOR_OLD;
ALTER TABLE UNITIZADOR ADD NUM_LARGURA_UNITIZADOR NUMBER(15,3) DEFAULT 0 NULL;
UPDATE UNITIZADOR SET NUM_LARGURA_UNITIZADOR = NUM_LARGURA_UNITIZADOR_OLD;
COMMIT;
ALTER TABLE UNITIZADOR DROP COLUMN NUM_LARGURA_UNITIZADOR_OLD CASCADE CONSTRAINTS;
ALTER TABLE UNITIZADOR MODIFY NUM_LARGURA_UNITIZADOR NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN UNITIZADOR.NUM_LARGURA_UNITIZADOR IS 'Número da dimensão da largura (dimensão da largura é em metros)';

ALTER TABLE UNITIZADOR RENAME COLUMN NUM_PROFUNDIDADE_UNITIZADOR TO NUM_PROFUNDIDADE_UNITIZADOR_O;
ALTER TABLE UNITIZADOR ADD NUM_PROFUNDIDADE_UNITIZADOR NUMBER(15,3) DEFAULT 0 NULL;
UPDATE UNITIZADOR SET NUM_PROFUNDIDADE_UNITIZADOR = NUM_PROFUNDIDADE_UNITIZADOR_O;
COMMIT;
ALTER TABLE UNITIZADOR DROP COLUMN NUM_PROFUNDIDADE_UNITIZADOR_O CASCADE CONSTRAINTS;
ALTER TABLE UNITIZADOR MODIFY NUM_PROFUNDIDADE_UNITIZADOR NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN UNITIZADOR.NUM_PROFUNDIDADE_UNITIZADOR IS 'Número da dimensão da profundidade (dimensão da profundidade é em metros)';

ALTER TABLE UNITIZADOR RENAME COLUMN NUM_CUBAGEM_UNITIZADOR TO NUM_CUBAGEM_UNITIZADOR_OLD;
ALTER TABLE UNITIZADOR ADD NUM_CUBAGEM_UNITIZADOR NUMBER(15,3) DEFAULT 0 NULL;
UPDATE UNITIZADOR SET NUM_CUBAGEM_UNITIZADOR = NUM_CUBAGEM_UNITIZADOR_OLD;
COMMIT;
ALTER TABLE UNITIZADOR DROP COLUMN NUM_CUBAGEM_UNITIZADOR_OLD CASCADE CONSTRAINTS;
ALTER TABLE UNITIZADOR MODIFY NUM_CUBAGEM_UNITIZADOR NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN UNITIZADOR.NUM_CUBAGEM_UNITIZADOR IS 'Número da cubagem unitizador (calculo da multiplicação dos campos altura, largura e profundidade; a dimensão é em m³)';

ALTER TABLE UNITIZADOR RENAME COLUMN NUM_AREA_UNITIZADOR TO NUM_AREA_UNITIZADOR_OLD;
ALTER TABLE UNITIZADOR ADD NUM_AREA_UNITIZADOR NUMBER(15,3) DEFAULT 0 NULL;
UPDATE UNITIZADOR SET NUM_AREA_UNITIZADOR = NUM_AREA_UNITIZADOR_OLD;
COMMIT;
ALTER TABLE UNITIZADOR DROP COLUMN NUM_AREA_UNITIZADOR_OLD CASCADE CONSTRAINTS;
ALTER TABLE UNITIZADOR MODIFY NUM_AREA_UNITIZADOR NUMBER(15,3) DEFAULT 0 NOT NULL;
COMMENT ON COLUMN UNITIZADOR.NUM_AREA_UNITIZADOR IS 'Número da área unitizador (mutiplicação dos campos largura, profundidade; a dimensão é em m²)';


-- revision 2012-09-11 - adriano uliana - Relatorios > Recebimento > Produtos Sem Dados Logisticos
-- gravo acao
INSERT INTO RECURSO (COD_RECURSO, DSC_RECURSO, COD_RECURSO_PAI, NOM_RECURSO) VALUES (SQ_RECURSO_01.NEXTVAL, 'Relatório de Produtos Sem Dados Logísticos', 0, 'relatorio_produtos-sem-dados-logisticos');
-- gravo permissoes
INSERT INTO RECURSO_ACAO (COD_RECURSO_ACAO, COD_RECURSO, COD_ACAO, DSC_RECURSO_ACAO) VALUES (SQ_RECURSO_ACAO_01.NEXTVAL, (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'relatorio_produtos-sem-dados-logisticos'), 5, 'Início');
-- gravo menu
INSERT INTO MENU_ITEM (COD_MENU_ITEM, COD_RECURSO_ACAO, COD_PAI, DSC_MENU_ITEM, NUM_PESO, DSC_URL) VALUES (SQ_MENU_ITEM_01.NEXTVAL, 
    (SELECT COD_RECURSO_ACAO FROM RECURSO_ACAO WHERE COD_RECURSO = (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'relatorio_produtos-sem-dados-logisticos') AND COD_ACAO = 5), 
    (SELECT COD_MENU_ITEM FROM MENU_ITEM WHERE DSC_MENU_ITEM = 'Recebimento' AND COD_PAI = 54), 'Produtos Sem Dados Logísticos', 10, '#');


-- revision 2012-09-12 - renato medina - SIGLAS DO PRODUTO
INSERT INTO TIPO_SIGLA (COD_TIPO_SIGLA, DSC_TIPO_SIGLA, IND_SIGLA_SISTEMA) Values (52, 'TIPO COMERCIALIZAÇÃO PRODUTO', 'S');

INSERT INTO SIGLA (COD_SIGLA, COD_TIPO_SIGLA, DSC_SIGLA, COD_REFERENCIA_SIGLA) Values (7, 52, 'UNITÁRIO', 1);
INSERT INTO SIGLA (COD_SIGLA, COD_TIPO_SIGLA, DSC_SIGLA, COD_REFERENCIA_SIGLA) Values (8, 52, 'COMPOSTO', 2);
INSERT INTO SIGLA (COD_SIGLA, COD_TIPO_SIGLA, DSC_SIGLA, COD_REFERENCIA_SIGLA) Values (9, 52, 'KIT', 3);

CREATE OR REPLACE FORCE VIEW V_TIPO_COMERCIALIZACAO
(
   COD_TIPO_COMERCIALIZACAO,
   DSC_TIPO_COMERCIALIZACAO
)
AS
   SELECT COD_REFERENCIA_SIGLA AS COD_TIPO_COMERCIALIZACAO,
          DSC_SIGLA AS DSC_TIPO_COMERCIALIZACAO
     FROM SIGLA
    WHERE COD_TIPO_SIGLA = 52;


-- revision - renato medina
UPDATE atividade SET DSC_ATIVIDADE = 'CONF. RECEBIMENTO' WHERE COD_ATIVIDADE = 1;
UPDATE atividade SET DSC_ATIVIDADE = 'RECONF. RECEBIMENTO' WHERE COD_ATIVIDADE = 3;

-- #################################################################### DAQUI PRA CIMA JA FOI RODADO NA PRODUÇÃO #################################################################### 

-- #################################################################### DAQUI PRA CIMA JA FOI RODADO NA HOMOLOG PARA TESTES #################################################################### 



COMMIT;
