
-- revision 2012-10-25 - Recebimento Embalagem/Volume - Fabio Caram
ALTER TABLE RECEBIMENTO_CONFERENCIA ADD (COD_RECEBIMENTO VARCHAR2(20));

CREATE INDEX FK_CONRE_RECEB ON RECEBIMENTO_CONFERENCIA (COD_RECEBIMENTO  ASC);

CREATE TABLE RECEBIMENTO_EMBALAGEM
(
	COD_RECEBIMENTO_EMBALAGEM  NUMBER(8) NOT NULL,
	QTD_CONFERIDA  NUMBER(8)  NULL ,
	DTH_CONFERENCIA  DATE  NOT NULL ,
	COD_OS  NUMBER(8)  NULL ,
	COD_PRODUTO_EMBALAGEM  NUMBER(8)  NULL ,
	COD_RECEBIMENTO  VARCHAR2(20)  NULL 
);
COMMENT ON COLUMN RECEBIMENTO_EMBALAGEM.COD_RECEBIMENTO_EMBALAGEM IS 'código Conferencia Recebimento (código sequencial)';
COMMENT ON COLUMN RECEBIMENTO_EMBALAGEM.QTD_CONFERIDA IS 'Quantidade do item recebido';
COMMENT ON COLUMN RECEBIMENTO_EMBALAGEM.DTH_CONFERENCIA IS 'Data e hora da conferencia.';
COMMENT ON COLUMN RECEBIMENTO_EMBALAGEM.COD_OS IS 'Número da Ordem de Serviço alocada para o conferente';
COMMENT ON COLUMN RECEBIMENTO_EMBALAGEM.COD_PRODUTO_EMBALAGEM IS 'Código Produto Embalagem (código sequencial)';
COMMENT ON COLUMN RECEBIMENTO_EMBALAGEM.COD_RECEBIMENTO IS 'Código Recebimento';

CREATE  UNIQUE INDEX PK_REEMB ON RECEBIMENTO_EMBALAGEM (COD_RECEBIMENTO_EMBALAGEM  ASC);
CREATE INDEX FK_REEMB_ORDSE ON RECEBIMENTO_EMBALAGEM (COD_OS  ASC);
CREATE INDEX FK_REEMB_PROEM ON RECEBIMENTO_EMBALAGEM (COD_PRODUTO_EMBALAGEM  ASC);
CREATE INDEX FK_REEMB_RECEB ON RECEBIMENTO_EMBALAGEM (COD_RECEBIMENTO  ASC);


CREATE TABLE RECEBIMENTO_VOLUME
(
	COD_RECEBIMENTO_VOLUME  NUMBER(8) NOT NULL ,
	QTD_CONFERIDA  NUMBER(8)  NULL ,
	DTH_CONFERENCIA  DATE  NOT NULL ,
	COD_OS  NUMBER(8)  NULL ,
	COD_PRODUTO_VOLUME  NUMBER(8)  NULL ,
	COD_RECEBIMENTO  VARCHAR2(20)  NULL 
);
COMMENT ON COLUMN RECEBIMENTO_VOLUME.COD_RECEBIMENTO_VOLUME IS 'código Conferencia Recebimento (código sequencial)';
COMMENT ON COLUMN RECEBIMENTO_VOLUME.QTD_CONFERIDA IS 'Quantidade do item recebido';
COMMENT ON COLUMN RECEBIMENTO_VOLUME.DTH_CONFERENCIA IS 'Data e hora da conferencia.';
COMMENT ON COLUMN RECEBIMENTO_VOLUME.COD_OS IS 'Número da Ordem de Serviço alocada para o conferente';
COMMENT ON COLUMN RECEBIMENTO_VOLUME.COD_PRODUTO_VOLUME IS 'Código produto volume (código sequêncial para o produto volume)';
COMMENT ON COLUMN RECEBIMENTO_VOLUME.COD_RECEBIMENTO IS 'Código Recebimento';

CREATE  UNIQUE INDEX PK_REVOL ON RECEBIMENTO_VOLUME (COD_RECEBIMENTO_VOLUME  ASC);
CREATE INDEX FK_REVOL_ORDSE ON RECEBIMENTO_VOLUME (COD_OS  ASC);
CREATE INDEX FK_REVOL_PROVO ON RECEBIMENTO_VOLUME (COD_PRODUTO_VOLUME  ASC);
CREATE INDEX FK_REVOL_RECEB ON RECEBIMENTO_VOLUME (COD_RECEBIMENTO  ASC);


ALTER TABLE RECEBIMENTO_EMBALAGEM   ADD CONSTRAINT  PK_REEMB       PRIMARY KEY (COD_RECEBIMENTO_EMBALAGEM);
ALTER TABLE RECEBIMENTO_VOLUME      ADD CONSTRAINT  PK_REVOL       PRIMARY KEY (COD_RECEBIMENTO_VOLUME);
ALTER TABLE RECEBIMENTO_CONFERENCIA ADD CONSTRAINT  FK_CONRE_RECEB FOREIGN KEY (COD_RECEBIMENTO) REFERENCES RECEBIMENTO(COD_RECEBIMENTO) ON DELETE SET NULL;
ALTER TABLE RECEBIMENTO_EMBALAGEM   ADD CONSTRAINT  FK_REEMB_ORDSE FOREIGN KEY (COD_OS) REFERENCES ORDEM_SERVICO(COD_OS) ON DELETE SET NULL;
ALTER TABLE RECEBIMENTO_EMBALAGEM   ADD CONSTRAINT  FK_REEMB_PROEM FOREIGN KEY (COD_PRODUTO_EMBALAGEM) REFERENCES PRODUTO_EMBALAGEM(COD_PRODUTO_EMBALAGEM) ON DELETE SET NULL;
ALTER TABLE RECEBIMENTO_EMBALAGEM   ADD CONSTRAINT  FK_REEMB_RECEB FOREIGN KEY (COD_RECEBIMENTO) REFERENCES RECEBIMENTO(COD_RECEBIMENTO) ON DELETE SET NULL;
ALTER TABLE RECEBIMENTO_VOLUME      ADD CONSTRAINT  FK_REVOL_ORDSE FOREIGN KEY (COD_OS) REFERENCES ORDEM_SERVICO(COD_OS) ON DELETE SET NULL;
ALTER TABLE RECEBIMENTO_VOLUME      ADD CONSTRAINT  FK_REVOL_PROVO FOREIGN KEY (COD_PRODUTO_VOLUME) REFERENCES PRODUTO_VOLUME(COD_PRODUTO_VOLUME) ON DELETE SET NULL;
ALTER TABLE RECEBIMENTO_VOLUME      ADD CONSTRAINT  FK_REVOL_RECEB FOREIGN KEY (COD_RECEBIMENTO) REFERENCES RECEBIMENTO(COD_RECEBIMENTO) ON DELETE SET NULL;


ALTER TABLE RECEBIMENTO_CONFERENCIA DROP PRIMARY KEY CASCADE  DROP INDEX;

ALTER TABLE RECEBIMENTO_CONFERENCIA ADD (COD_RECEBIMENTO_CONFERENCIA_N NUMBER(8));
UPDATE RECEBIMENTO_CONFERENCIA SET COD_RECEBIMENTO_CONFERENCIA_N = COD_RECEBIMENTO_CONFERENCIA;

ALTER TABLE RECEBIMENTO_CONFERENCIA DROP COLUMN COD_RECEBIMENTO_CONFERENCIA;
ALTER TABLE RECEBIMENTO_CONFERENCIA RENAME COLUMN COD_RECEBIMENTO_CONFERENCIA_N TO COD_RECEBIMENTO_CONFERENCIA;
COMMENT ON COLUMN RECEBIMENTO_CONFERENCIA.COD_RECEBIMENTO_CONFERENCIA IS 'código Conferencia Recebimento (código sequencial)';
ALTER TABLE RECEBIMENTO_CONFERENCIA MODIFY COD_RECEBIMENTO_CONFERENCIA NUMBER(8) NOT NULL;

CREATE UNIQUE INDEX PK_CONRE ON RECEBIMENTO_CONFERENCIA (COD_RECEBIMENTO_CONFERENCIA  ASC);
ALTER TABLE RECEBIMENTO_CONFERENCIA ADD CONSTRAINT PK_CONRE PRIMARY KEY (COD_RECEBIMENTO_CONFERENCIA);

CREATE SEQUENCE SQ_RECEBIMENTO_EMBALAGEM_01
	INCREMENT BY 1
	START WITH 15
	MAXVALUE 999999999999999999999999999
	MINVALUE 0
	NOCYCLE
	NOCACHE
	NOORDER;


CREATE SEQUENCE SQ_RECEBIMENTO_VOLUME_01
	INCREMENT BY 1
	START WITH 1
	MAXVALUE 999999999999999999999999999
	MINVALUE 0
	NOCYCLE
	NOCACHE
	NOORDER;


-- revision 2012-11-01 - Recebimento Conferencia - Renato Medina
UPDATE recebimento_conferencia rc SET rc.COD_RECEBIMENTO = (SELECT COD_RECEBIMENTO FROM ordem_servico os WHERE os.COD_OS = rc.COD_OS);


-- revision 2012-10-25 - Atividade - Renato Medina
UPDATE ordem_servico SET cod_atividade = 1 WHERE cod_atividade = 3;
DELETE FROM atividade WHERE COD_ATIVIDADE = 3;


-- revision 2012-10-26 - Enderecamento Embalagem/Volume - Fabio Caram
ALTER TABLE ORDEM_SERVICO ADD (COD_FORMA_CONFERENCIA CHAR(1) );
COMMENT ON COLUMN ORDEM_SERVICO.COD_FORMA_CONFERENCIA IS 'M = Manual (Conferencia Cega)    C = Coletor';

ALTER TABLE PRODUTO_VOLUME    ADD (COD_DEPOSITO_ENDERECO NUMBER(8) );
COMMENT ON COLUMN PRODUTO_VOLUME.COD_DEPOSITO_ENDERECO IS 'Código do Endereço de Picking do Volume do Produto';
CREATE INDEX FK_PROVO_DEPEN ON PRODUTO_VOLUME (COD_DEPOSITO_ENDERECO  ASC);

ALTER TABLE PRODUTO_EMBALAGEM ADD (COD_DEPOSITO_ENDERECO NUMBER(8) );
COMMENT ON COLUMN PRODUTO_EMBALAGEM.COD_DEPOSITO_ENDERECO IS 'Código do Endereço de Picking do Produto';
CREATE INDEX FK_PROEM_DEPEN ON PRODUTO_EMBALAGEM (COD_DEPOSITO_ENDERECO  ASC);

ALTER TABLE PRODUTO_EMBALAGEM ADD CONSTRAINT  FK_PROEM_DEPEN FOREIGN KEY (COD_DEPOSITO_ENDERECO) REFERENCES DEPOSITO_ENDERECO(COD_DEPOSITO_ENDERECO) ON DELETE SET NULL;
ALTER TABLE PRODUTO_VOLUME    ADD CONSTRAINT  FK_PROVO_DEPEN FOREIGN KEY (COD_DEPOSITO_ENDERECO) REFERENCES DEPOSITO_ENDERECO(COD_DEPOSITO_ENDERECO) ON DELETE SET NULL;


-- revision 2012-11-01 - Recebimento Desfeitos - Renato Medina
UPDATE recebimento SET dth_inicio_receb = dth_final_receb WHERE dth_inicio_receb IS NULL;

-- revision 2012-10-31 - Endereco - Fabio Caram
ALTER TABLE DEPOSITO_ENDERECO ADD (DSC_DEPOSITO_ENDERECO VARCHAR2(30));
COMMENT ON COLUMN DEPOSITO_ENDERECO.DSC_DEPOSITO_ENDERECO IS 'Descricao do Endereco, composto por Rua, Predio, Nivel e Apartamento';


-- revision 2012-11-07 - Cubagem 4 digitos - Fabio Caram
ALTER TABLE PRODUTO_DADO_LOGISTICO RENAME COLUMN NUM_CUBAGEM TO NUM_CUBAGEM_OLD;
ALTER TABLE PRODUTO_DADO_LOGISTICO ADD NUM_CUBAGEM NUMBER(15,4) NULL;
UPDATE PRODUTO_DADO_LOGISTICO SET NUM_CUBAGEM = NUM_CUBAGEM_OLD;
COMMIT;
ALTER TABLE PRODUTO_DADO_LOGISTICO DROP COLUMN NUM_CUBAGEM_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_DADO_LOGISTICO MODIFY NUM_CUBAGEM NUMBER(15,4) NOT NULL;
COMMENT ON COLUMN PRODUTO_DADO_LOGISTICO.NUM_CUBAGEM IS 'Cubagem do produto (em metros cúbicos)';


ALTER TABLE PRODUTO_VOLUME RENAME COLUMN NUM_CUBAGEM TO NUM_CUBAGEM_OLD;
ALTER TABLE PRODUTO_VOLUME ADD NUM_CUBAGEM NUMBER(15,4) NULL;
UPDATE PRODUTO_VOLUME SET NUM_CUBAGEM = NUM_CUBAGEM_OLD;
COMMIT;
ALTER TABLE PRODUTO_VOLUME DROP COLUMN NUM_CUBAGEM_OLD CASCADE CONSTRAINTS;
ALTER TABLE PRODUTO_VOLUME MODIFY NUM_CUBAGEM NUMBER(15,4) NOT NULL;
COMMENT ON COLUMN PRODUTO_VOLUME.NUM_CUBAGEM IS 'Cubagem do volume (em metros cúbicos)';


ALTER TABLE UNITIZADOR RENAME COLUMN NUM_CUBAGEM_UNITIZADOR TO NUM_CUBAGEM_UNITIZADOR_OLD;
ALTER TABLE UNITIZADOR ADD NUM_CUBAGEM_UNITIZADOR NUMBER(15,4) NULL;
UPDATE UNITIZADOR SET NUM_CUBAGEM_UNITIZADOR = NUM_CUBAGEM_UNITIZADOR_OLD;
COMMIT;
ALTER TABLE UNITIZADOR DROP COLUMN NUM_CUBAGEM_UNITIZADOR_OLD CASCADE CONSTRAINTS;
ALTER TABLE UNITIZADOR MODIFY NUM_CUBAGEM_UNITIZADOR NUMBER(15,4) NOT NULL;
COMMENT ON COLUMN UNITIZADOR.NUM_CUBAGEM_UNITIZADOR IS 'Cubagem do unitizador (em metros cúbicos)';


ALTER TABLE VEICULO RENAME COLUMN NUM_CUBAGEM_VEICULO TO NUM_CUBAGEM_VEICULO_OLD;
ALTER TABLE VEICULO ADD NUM_CUBAGEM_VEICULO NUMBER(15,4) NULL;
UPDATE VEICULO SET NUM_CUBAGEM_VEICULO = NUM_CUBAGEM_VEICULO_OLD;
COMMIT;
ALTER TABLE VEICULO DROP COLUMN NUM_CUBAGEM_VEICULO_OLD CASCADE CONSTRAINTS;
ALTER TABLE VEICULO MODIFY NUM_CUBAGEM_VEICULO NUMBER(15,4) NOT NULL;
COMMENT ON COLUMN VEICULO.NUM_CUBAGEM_VEICULO IS 'Cubagem do veículo (em metros cúbicos)';


ALTER TABLE VEICULO RENAME COLUMN NUM_ALTURA_VEICULO TO NUM_ALTURA_VEICULO_OLD;
ALTER TABLE VEICULO ADD NUM_ALTURA_VEICULO NUMBER(15,3) NULL;
UPDATE VEICULO SET NUM_ALTURA_VEICULO = NUM_ALTURA_VEICULO_OLD;
COMMIT;
ALTER TABLE VEICULO DROP COLUMN NUM_ALTURA_VEICULO_OLD CASCADE CONSTRAINTS;
ALTER TABLE VEICULO MODIFY NUM_ALTURA_VEICULO NUMBER(15,3) NOT NULL;
COMMENT ON COLUMN VEICULO.NUM_ALTURA_VEICULO IS 'Altura do veículo (em metros)';


ALTER TABLE VEICULO RENAME COLUMN NUM_LARGURA_VEICULO TO NUM_LARGURA_VEICULO_OLD;
ALTER TABLE VEICULO ADD NUM_LARGURA_VEICULO NUMBER(15,3) NULL;
UPDATE VEICULO SET NUM_LARGURA_VEICULO = NUM_LARGURA_VEICULO_OLD;
COMMIT;
ALTER TABLE VEICULO DROP COLUMN NUM_LARGURA_VEICULO_OLD CASCADE CONSTRAINTS;
ALTER TABLE VEICULO MODIFY NUM_LARGURA_VEICULO NUMBER(15,3) NOT NULL;
COMMENT ON COLUMN VEICULO.NUM_LARGURA_VEICULO IS 'Largura do veículo (em metros)';


ALTER TABLE VEICULO RENAME COLUMN NUM_PROFUNDIDADE_VEICULO TO NUM_PROFUNDIDADE_VEICULO_OLD;
ALTER TABLE VEICULO ADD NUM_PROFUNDIDADE_VEICULO NUMBER(15,3) NULL;
UPDATE VEICULO SET NUM_PROFUNDIDADE_VEICULO = NUM_PROFUNDIDADE_VEICULO_OLD;
COMMIT;
ALTER TABLE VEICULO DROP COLUMN NUM_PROFUNDIDADE_VEICULO_OLD CASCADE CONSTRAINTS;
ALTER TABLE VEICULO MODIFY NUM_PROFUNDIDADE_VEICULO NUMBER(15,3) NOT NULL;
COMMENT ON COLUMN VEICULO.NUM_PROFUNDIDADE_VEICULO IS 'Profundidade do veículo (em metros)';

-- revision 2012-11-23 - Adriano Uliana - Relatorio de Dados Logisticos dos Produtos
UPDATE RECURSO SET DSC_RECURSO = 'Relatório de Dados Logísticos dos Produtos', NOM_RECURSO = 'relatorio_dados-logisticos-produto' WHERE COD_RECURSO = (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'relatorio_produtos-sem-dados-logisticos');
UPDATE MENU_ITEM SET DSC_MENU_ITEM = 'Dados Logísticos dos Produtos' WHERE DSC_MENU_ITEM LIKE 'Produtos Sem Dados Logísticos';


-- revision 2012-12-21 - CPF unico - Fabio Caram
DROP INDEX IX_PEFIS_01;
CREATE UNIQUE INDEX IX_PEFIS_01 ON WMS_ADM.PESSOA_FISICA (NUM_CPF);

-- revision 2012-11-26 - Adriano Uliana - Relatorio de Usuários
UPDATE RECURSO SET DSC_RECURSO = 'Relatório de Usuários', NOM_RECURSO = 'relatorio_lista-usuario' WHERE COD_RECURSO = (SELECT COD_RECURSO FROM RECURSO WHERE NOM_RECURSO = 'relatorio_lista-usuario');

-- revision 07/01/2013 - Recebimento Andamento - Fabio Caram
ALTER TABLE RECEBIMENTO_ANDAMENTO MODIFY DSC_OBSERVACAO VARCHAR2(512);

-- #################################################################### DAQUI PRA CIMA JA FOI RODADO NA PRODUÇÃO #################################################################### 


-- #################################################################### DAQUI PRA CIMA JA FOI RODADO NA HOMOLOG PARA TESTES #################################################################### 

-- #################################################################### DAQUI PRA CIMA JA FOI RODADO EM DESENV  #################################################################### 
