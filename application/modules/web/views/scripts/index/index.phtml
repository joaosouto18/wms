<script type="text/javascript">
    var arrRecebimenoValues = null;
    var arrRecebimenoColumns = null;
    var arrRecebimentoTotal = null;
    var arrExpedicaoValues = null;
    var arrExpedicaoColumns = null;
    var arrExpedicaoTotal = null;
    $(window).load(function() {
        $(document).ready(function(){

            <?php if ($this->recebimentoData != "false" ) : ?>
            arrRecebimenoValues = <?php echo $this->recebimentoData ?>;
            arrRecebimenoColumns = <?php echo $this->recebimentoStatus ?>;
            arrRecebimentoTotal = parseInt(<?php echo $this->recebimentoTotal ?>);
            graficoRecebimento();
            <?php endif; ?>
            graficoDadosLogisticos();
            <?php if ($this->expedicaoData != "false" ) : ?>
            arrExpedicaoValues = <?php echo $this->expedicaoData ?>;
            arrExpedicaoColumns = <?php echo $this->expedicaoStatus ?>;
            arrExpedicaoTotal = parseInt(<?php echo $this->expedicaoTotal ?>);
            graficoExpedicao();
            <?php endif; ?>

        });

        function graficoRecebimento(){
            var s1 = arrRecebimenoValues;
            // Can specify a custom tick Array.
            // Ticks should match up one for each y value (category) in the series.
            var ticks = arrRecebimenoColumns;

            var plot1 = $.jqplot('chart_recebimento', [s1], {
                // The "seriesDefaults" option is an options object that will
                // be applied to all series in the chart.
                seriesDefaults:{
                    renderer:$.jqplot.BarRenderer,
                    pointLabels: { show: true }
                },
                // Custom labels for the series are specified with the "label"
                // option on the series option.  Here a series option object
                // is specified for each series.
                series:[
                    {label:'Recebimentos'}
                ],
                // Show the legend and put it outside the grid, but inside the
                // plot container, shrinking the grid to accomodate the legend.
                // A value of "outside" would not shrink the grid and allow
                // the legend to overflow the container.
                legend: {
                    show: true,
                    location: 'n',
                    placement: 'outsideGrid'
                },
                axes: {
                    // Use a category axis on the x axis and use our custom ticks.
                    xaxis: {
                        renderer: $.jqplot.CategoryAxisRenderer,
                        ticks: ticks
                    },
                    // Pad the y axis just a little so bars can get close to, but
                    // not touch, the grid boundaries.  1.2 is the default padding.
                    yaxis: {
                        tickOptions: {formatString: '%d'}
                    }
                }
            });
        }

        function graficoExpedicao(){
            var s1 = arrExpedicaoValues;
            // Can specify a custom tick Array.
            // Ticks should match up one for each y value (category) in the series.
            var ticks = arrExpedicaoColumns;

            var plot1 = $.jqplot('chart_expedicao', [s1], {
                // The "seriesDefaults" option is an options object that will
                // be applied to all series in the chart.
                seriesDefaults:{
                    renderer:$.jqplot.BarRenderer,
                    pointLabels: { show: true }
                },
                // Custom labels for the series are specified with the "label"
                // option on the series option.  Here a series option object
                // is specified for each series.
                series:[
                    {label:'Expedições'}
                ],
                // Show the legend and put it outside the grid, but inside the
                // plot container, shrinking the grid to accomodate the legend.
                // A value of "outside" would not shrink the grid and allow
                // the legend to overflow the container.
                legend: {
                    show: true,
                    location: 'n',
                    placement: 'outsideGrid'
                },
                axes: {
                    // Use a category axis on the x axis and use our custom ticks.
                    xaxis: {
                        renderer: $.jqplot.CategoryAxisRenderer,
                        ticks: ticks
                    },
                    // Pad the y axis just a little so bars can get close to, but
                    // not touch, the grid boundaries.  1.2 is the default padding.
                    yaxis: {
                        tickOptions: {formatString: '%d'}
                    }
                }
            });
        }

        function graficoDadosLogisticos(){
            var com = <?php echo $this->produtosComDadosLogisticos ?>;
            // Can specify a custom tick Array.
            // Ticks should match up one for each y value (category) in the series.
            var sem = <?php echo $this->produtosSemDadosLogisticos ?>;

            var data = [
                ['Com Dados Logísticos', com],['Sem Dados Logísticos', sem]
            ];
            var plot2 = jQuery.jqplot ('chart_produtosDadosLogisticos', [data],
            {
                seriesDefaults: {
                    // Make this a pie chart.
                    renderer: jQuery.jqplot.PieRenderer,
                    rendererOptions: {
                        // Put data labels on the pie slices.
                        // By default, labels show the percentage of the slice.
                        showDataLabels: true
                    }
                },
                legend: { show:true, location: 'e' }
            }
        );
        }

    });

</script>

<style>

    table.jqplot-table-legend, table.jqplot-cursor-legend {
        background-color: rgba(255, 255, 255, 0.6);
        border: 1px solid #CCC;
        position: absolute;
        font-size: .75em;
    }

    table.jqplot-table-legend {
        margin-top: 12px;
        margin-bottom: 12px;
        margin-left: 12px;
        margin-right: 12px;
        border-collapse:separate;
    }
    td.jqplot-table-legend > div {
        border: 1px solid #CCC;
        padding: 1px;
    }
    div.jqplot-table-legend-swatch {
        width: 0;
        height: 0;
        border-top-width: 5px;
        border-bottom-width: 5px;
        border-left-width: 6px;
        border-right-width: 6px;
        border-top-style: solid;
        border-bottom-style: solid;
        border-left-style: solid;
        border-right-style: solid;
    }
    .charts{
        margin-top: -60px;
    }
    .chartTitle{
        font-weight: bold;
    }
    .chart{
        margin-top: 70px;
        margin-left: 20%;
        margin-right: 20%;
        height: 250px;
        width: 60%;
        position: relative;
        text-align: center;
    }
    .sem-dados p{
        margin-top: 200px;
        font-size: 18px;
        font-weight: bold;
        text-shadow: #595959;
    }
</style>

<?php echo $this->form;?>

<!--Div that will hold the pie chart-->
<div class="charts">
    <div class="chart">
        <label class="chartTitle">Produtos com/sem Dados Logísticos</label>
        <div class="" id="chart_produtosDadosLogisticos"></div>
    </div>

    <div class="chart">
        <?php if ($this->recebimentoData != "false" ){ ?>
        <div class="" id="chart_recebimento"></div>
        <?php } else {?>
        <div class="sem-dados">
            <p>Neste intervalo de datas não houve registro de recebimento</p>
        </div>
        <?php } ?>
    </div>

    <div class="chart">
        <?php if ($this->expedicaoData != "false" ){ ?>
        <div class="" id="chart_expedicao"></div>
        <?php } else {?>
        <div class="sem-dados">
            <p>Neste intervalo de datas não houve registro de expedição</p>
        </div>
        <?php } ?>
    </div>
</div>

<script>
    $(function() {
        $('#chart_expedicao').bind('jqplotDataHighlight',
            function (ev,seriesIndex, pointIndex) {
                var x = ((arrExpedicaoValues[pointIndex]/arrExpedicaoTotal) * 100).toFixed(2);
                var status = arrExpedicaoColumns[pointIndex];
                var title = "Expedições com status " + status + " correspondem à " + x.replace('.',',') + "% do total deste periodo";
                $(this).prop('title', title);
            }
        ).bind('jqplotDataUnhighlight',
            function (ev) {
                $(this).removeAttr('title');
            }
        );

        $('#chart_recebimento').bind('jqplotDataHighlight',
            function (ev,seriesIndex, pointIndex) {
                var x = ((arrRecebimenoValues[pointIndex] / arrRecebimentoTotal) * 100).toFixed(2);
                var status = arrRecebimenoColumns[pointIndex];
                var title = "Recebimentos com status " + status + " correspondem à " + x.replace('.',',') + "% do total deste periodo";
                $(this).prop('title', title);
            }
        ).bind('jqplotDataUnhighlight',
            function (ev) {
                $(this).removeAttr('title');
            }
        );
    })
</script>